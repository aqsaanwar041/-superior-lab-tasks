{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "68a71e71-0c5a-4723-98bf-fdd4c8000429",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "unterminated f-string literal (detected at line 14) (3945253708.py, line 14)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[9], line 14\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(f\"Employee ID:\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m unterminated f-string literal (detected at line 14)\n"
     ]
    }
   ],
   "source": [
    "import csv\n",
    "class person:\n",
    "    def __init__(self, name,age):\n",
    "        self.name = name\n",
    "        self.age = age\n",
    "    def display_info(self):\n",
    "        print(f\"Name: {self.name},Age: {self.age}\")\n",
    "        \n",
    "class Employee:\n",
    "    def __init__(self,employee_id,position):\n",
    "        self.employee_id = employee_id\n",
    "        self.position = position\n",
    "    def display_info(self):\n",
    "        print(f\"Employee ID:\n",
    "{self.employee_id}, position:{self.position}\")\n",
    "       \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "da2ae6b7-033e-403e-97e3-f4ca3794bfd3",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "expected an indented block after function definition on line 6 (1814029720.py, line 7)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[20], line 7\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(f\"Department:{self.department}\")\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mIndentationError\u001b[0m\u001b[1;31m:\u001b[0m expected an indented block after function definition on line 6\n"
     ]
    }
   ],
   "source": [
    "    class staff(person,Employee):\n",
    "          def __init__(self, name, age, employee_id, position, department):\n",
    "              person.__init__(self,age)\n",
    "              Employee.__info__(self,employee_id,position)\n",
    "              self.department = department\n",
    "          def additional_info(self):\n",
    "           print(f\"Department:{self.department}\")\n",
    "         \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c64daba-1714-4048-97d0-88aad5f53860",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
